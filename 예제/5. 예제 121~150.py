print("------------------------------------- 121")
# 121
'''사용자로부터 문자 한개를 입력 받고, 소문자일 경우 대문자로, 대문자 일
   경우, 소문자로 변경해서 출력하라.'''
# user = input("")
# if user.islower():
#     print(user.upper())
# else:
#     print(user.lower())


print("------------------------------------- 122")
# 122
'''점수 구간에 해당하는 학점이 아래와 같이 정의되어 있다. 
   사용자로부터 score를 입력받아 학점을 출력하라.
점수	학점
81~100	A
61~80	B
41~60	C
21~40	D
0~20	E
'''
# score = input("점수를 입력하시오: ")
# score = int(score)
# if 81 <= score <= 100:
#     print('A')
# elif 61 <= score <= 80:
#     print("B")
# elif 41 <= score <= 60:
#     print("C")
# elif 21 <= score <= 40:
#     print("D")
# elif 0 <= score <= 20:
#     print("E")
# else:
#     print("다시 입력하세요.")


print("------------------------------------- 123 다시보기")
# 123 처음보는거다
'''사용자로부터 달러, 엔 유로, 또는 위안 금액을 입력받은 후 이를 원으로 변환하는 프로
   그램을 작성하라. 각 통화별 환율은 다음과 같다. 사용자는 100달러,1000엔,13유로,100위안과
   같이 금액과 통화명 사이에 공백을 넣어 입력한다고 가정한다.
통화명	환율
달러	1167
엔	1.096
유로	1268
위안	171
'''

# 환율 = {\
# "달러" : 1167,
# "엔" : 1.096,
# "유로" : 1268,
# "위안" : 171
# }
# user = input("환율 변환 프로그램입니다: ")
# num, currency = user.split()
# print(float(num) * 환율[currency], "원")


print("------------------------------------- 124")
# 124
'''사용자로부터 세 개의 숫자를 입력 받은 후 가장 큰 숫자를 출력하라.'''
# num1 = input("input number1: ")
# num2 = input("input number2: ")
# num3 = input("input number3: ")
# num1 = int(num1)
# num2 = int(num2)
# num3 = int(num3)
# if num1 >= num2 and num1 >= num3:
#     print(num1)
# elif num2 >= num1 and num2 >= num3:
#     print(num2)
# else:
#     print(num3)


print("------------------------------------- 125")
# 125
'''휴대폰 번호 앞자리에 따라 통신사는 아래와 같이 구분된다.
   사용자로부터 휴대전화 번호를 입력 받고, 통신사를 출력하는 프로그램을 작성하라.
번호	통신사
011	SKT
016	KT
019	LGU
010	알수없음   
'''
# number = input("휴대전화 번호 입력: ")
# num = number.split("-")[0]
# if num == "011":
#     com = "SKT"
# elif num == "016":
#     com = "KT"
# elif num == "019":
#     com = "LGU"
# else:
#     com = "알수없음"
# print(f"당신은 {com} 사용자입니다.")


print("------------------------------------- 126")
# 126
'''우편변호는 5자리로 구성되는데, 앞의 세자리는 구를 나타낸다.
   예를들어, 강북구의 경우 010,011,012 세 자리로 시작한다.'''
# 우편번호 = input("우편번호: ")
# 우편번호 = 우편번호[:3]
# if 우편번호 in ["010", "011", "012"]:
#     print("강북구")
# elif 우편번호 in ["013", "014", "015"]:
#     print("도봉구")
# elif 우편번호 in ["016", "017", "018", "019"]:
#     print("노원구")
# else:
#     print("없는 지역입니다.")
# # 답에는 else:
#        #    print("노원구") 로 되어있음


print("------------------------------------- 127")
# 127
'''주민등록번호 뒷 자리 7자리 중 첫째 자리는 성별을 나타내는데,
  1, 3은 남자 2, 4는 여자를 의미한다. 사용자로부터 13자리의 주민등록번호를
  입력 받은 후 성별 (남자, 여자)를 출력하는 프로그램을 작성하라.
'''
# id = input("주민등록번호: ")
# id = id.split('-')[1] # -로 나눈다음 뒤에 구역
# if id[0] == '1' or id[0] == '3':
#     print('남자')
# elif id[0] == '2'or id[0] == '4':
#     print('여자')
# else:
#     print('다시입력하세요.')


print("------------------------------------- 128")
# 128
'''주민등록번호의 뒷 자리 7자리 중 두번째와 세번째는 지역코드를 의미한다.
   주민 등록 번호를 입력 받은 후 출생지가 서울인지 아닌지 판단하는 코드를 작성하라
지역코드	출생지
00 ~ 08	서울
09 ~ 12	부산
'''
# id = input('주민등록번호: ')
# 뒷자리 = id.split('-')[1]
# if 0 <= int(뒷자리[1:3]) <= 8:
#     print('서울입니다.')
# else:
#     print('서울이 아닙니다.')




print("------------------------------------- 129")
# 129
'''주민등록번호는 13자리로 구성되는데 마지막 자리수는 주민등록번호의 유효성을 체크
하는데 사용된다. 먼저 앞에서부터 12자리의 숫자에 2,3,4,5,6,7,8,9,2,3,4,5를 차례로
곱한 뒤 그 값을 전부 더한다. 연산 결과 값을 11로 나누면 나머지가 나오는데 11에서 나머지
를 뺀 값이 주민등록번호의 마지막 번호가 된다.'''

# num = input('주민등록번호: ')
# 계산1 = int(num[0]) *2 + int(num[1]) *3 + int(num[2]) *4 + int(num[3]) *5 + \
#         int(num[4]) *6 + int(num[5]) *7 + int(num[7]) *8 + int(num[8]) *9 + \
#         int(num[9]) *2 + int(num[10]) *3 + int(num[11]) *4 + int(num[12]) *5
# 계산2 = 11 - (계산1 % 11)
# 계산3 = str(계산2)

# if num[-1] == 계산3[-1]:
#     print('유효한 주민등록번호입니다.')
# else:
#     print('유효하지 않은 주민등록번호입니다.')


print("------------------------------------- 130")
# 130
# import requests
# btc = requests.get("https://api.bithumb.com/public/ticker/").json()['data']
# '''
# {"status":"0000","data":{"opening_price":"74071000","closing_price":"74469000",
# "min_price":"73207000","max_price":"74955000","units_traded":"3406.45167043",
# "acc_trade_value":"252359859427.5198","prev_closing_price":"74079000",
# "units_traded_24H":"3614.00562431","acc_trade_value_24H":"267788827295.3063",
# "fluctate_24H":"139000","fluctate_rate_24H":"0.19","date":"1636120435848"}}
# '''
# 변동폭 = float(btc['max_price']) - float(btc['min_price'])
# 시가 = float(btc['opening_price'])
# 최고가 = float(btc['max_price'])

# if (시가+변동폭) > 최고가:
#     print("상승장")
# else:
#     print("하락장")


print("------------------------------------- 131")
# 131
'''for문의 실행결과를 예측하라.'''
과일 = ["사과", "귤", "수박"]
for 변수 in 과일:
    print(변수)


print("------------------------------------- 132")
# 132
'''for문의 실행결과를 예측하라'''
과일 = ["사과", "귤", "수박"]
for 변수 in 과일:
  print("#####")
# 내 예상 땡
'''
사과
#####
귤
#####
수박
##### true 와 false 로 구분하기때문
'''
'''기초문법 배우기-1에서 for문의 핵심은
 "들여쓰기된 코드가 자료구조에 저장된 데이터 개수만큼 반복된다"라고 설명했습니다. 
 과일 = ["사과", "귤", "수박"] 
에는 세 개의 데이터가 저장돼 있으므로 들여쓰기된 print("####")코드가 세 번 실행됩니다.'''


print("------------------------------------- 133")
# 133
'''다음 for 문과 동일한 기능을 수행하는 코드를 작성하세요.'''
'''for 변수 in ["A", "B", "C"]:
  print(변수)'''
# 내답
# 알파벳 = ["A", "B", "C"]
# for 변수 in 알파벳:
#    print(변수)

# 정답
변수 = "A"
print(변수)
변수 = "B"
print(변수)
변수 = "C"
print(변수)

print(">>>>>>>>")

print("A")
print("B")
print("C")


print("------------------------------------- 134")
# 134
'''for문을 풀어서 동일한 동작을하는 코드를 작성하라. 질문 이해 능력을 높이자'''
for 변수 in ["A", "B", "C"]:
   print("출력:", 변수)
print('>>>>>>>>')
# 답
변수 = "A"
print("출력:", 변수)
변수 = "B"
print("출력:", 변수)
변수 = "C"
print("출력:", 변수)

# print("출력:", "A")
# print("출력:", "B")
# print("출력:", "C")


print("------------------------------------- 135")
# 135
'''for문을 풀어서 동일한 동작을 하는 코드를 작성하라.'''
for 변수 in ["A", "B", "C"]:
  b = 변수.lower()
  print("변환:", b)

# 내 답
변수 = "A"
print("변환: ", 변수.lower())
변수 = "B"
print("변환: ", 변수.lower())
변수 = "C"
print("변환: ", 변수.lower())

print('')
# 정답
변수 = "A"
b = 변수.lower()
print("변환: ", b)
변수 = "B"
b = 변수.lower()
print("변환: ", b)
변수 = "C"
b = 변수.lower()
print("변환: ", b)


print("------------------------------------- 136")
# 136
'''다음 코드를 for문으로 작성하라.
변수 = 10
print(변수)
변수 = 20
print(변수)
변수 = 30
print(변수)
'''
# 답 1
for 변수 in [10, 20, 30]:
  print(변수)
# 내 답
A = [10, 20, 30]
for i in A:
   print(i)


print("------------------------------------- 137")
# 137
'''다음 코드를 for문으로 작성하라.
print(10)
print(20)
print(30)
'''
변수 = 10
print(변수)
변수 = 20
print(변수)
변수 = 30
print(변수)
'''값을 바인딩하는 코드가 생략된 코드입니다. 그렇다해도 for문으로 변경할 수 있어야합니다. 
   변하는 부분은 값 10, 20, 30입니다. 변하지 않는 부분은 print() 코드입니다.'''


print("------------------------------------- 138")
# 138
'''다음 코드를 for문으로 작성하라.'''
'''
print(10)
print("-------")
print(20)
print("-------")
print(30)
print("-------")
'''
# 내 답
B = [10, 20, 30]
for i in B:
   print(i)
   print("-------")
# 정답 
'''
변수 = 10
print(변수)
print("-------")

변수 = 20
print(변수)
print("-------")

변수 = 30
print(변수)
print("-------")
'''
for 변수 in [10, 20, 30]:
  print(변수)
  print("-------")


print("------------------------------------- 139")
# 139
'''다음 코드를 for문으로 작성하라.'''
'''print("++++")
print(10)
print(20)
print(30)'''
# 딩동댕
print("++++")
for i in [10, 20, 30]:
   print(i)


print("------------------------------------- 140")
# 140
'''print("-------")
print("-------")
print("-------")
print("-------")'''
# 내 답
C = ["-------","-------","-------","-------"]
for i in C:
   print(i)
'''파이썬 for문은 들여쓰기된 코드가 자료구조의 데이터 개수만큼 반복된다는 사실이 중요합니다.'''
# 정답
print("코드 4번 실행 4개의 데이터만 있으면 됌")
for 변수 in ["가", "나", "다", "라"]:
  print("-------")
print("똑같이 코드 4번 실행")
for 변수 in [1, 2, 3, 4]:
  print("-------")


print("------------------------------------- 141")
# 141
'''다음과 같이 판매가가 저장된 리스트가 있을 때 부가세가 포함된 가격을 for문을 사용해서 화면에
출력하라. 단 부과세는 10원으로 가정한다.'''
'''
변수 = 100
print(변수 + 10)
변수 = 200
print(변수 + 10)
변수 = 300
print(변수 + 10)'''

리스트 = [100, 200, 300]
for i in 리스트:
   print(i + 10)
'''파이썬 인터프리터가 코드를 실행하는 순서를 익혀서, 한 번에 for문으로 작성할 수 있어야합니다.
(100 바인딩 - 들여쓰기 코드 실행)
(200 바인딩 - 들여쓰기 코드 실행)
(300 바인딩 - 들여쓰기 코드 실행)
'''

print("------------------------------------- 142")
# 142
'''for문을 사용해서 리스트에 저장된 값을 다음과 같이 출력하라.'''
리스트 = ['김밥', '라면', '튀김']
for i in 리스트:
   print("오늘의 메뉴:", i)
# for 문을 사용하지 않고 작성 정답중 +도 됌 띄어쓰기 없이 출력
메뉴 = '김밥'
print("오늘의 메뉴:"+ 메뉴)
메뉴 = '라면'
print("오늘의 메뉴:"+ 메뉴)
메뉴 = '튀김'
print("오늘의 메뉴:"+ 메뉴)


print("------------------------------------- 143")
# 143
'''리스트에 주식 종목이름이 저장돼 있다.'''
리스트 = ["SK하이닉스", "삼성전자", "LG전자"]
for 종목명 in 리스트:
   print(len(종목명))


print("------------------------------------- 144")
# 144
'''리스트에는 동물이름이 문자열로 저장돼 있다.'''
리스트 = ['dog', 'cat', 'parrot']
'''동물 이름과 글자수를 다음과 같이 출력하라.
dog 3
cat 3
parrot 6
'''
for 동물이름 in 리스트:
   print(동물이름, len(동물이름))


print("------------------------------------- 145")
# 145
'''리스트에 동물 이름 저장돼 있다.'''
리스트 = ['dog', 'cat', 'parrot']
'''for문을 사용해서 동물 이름의 첫 글자만 출력하라.'''
for i in 리스트:
   print(i[0])
'''변하는 값은 for문의 자료구조 자리에, 변하지 않는 코드는 들여쓰기 후에 작성합니다.'''
# for 문을 사용하지 않고
'''
이름 = "dog"
print(이름[0])
변수 = "cat"
print(이름[0])
변수 = "parrot"
print(이름[0])
'''


print("------------------------------------- 146")
# 146
'''리스트에는 세 개의 숫자가 바인딩돼 있다.'''
리스트 = [1, 2, 3]
'''for문을 사용해서 다음과 같이 출력하라.
3 x 1
3 x 2
3 x 3
리스트 = [1, 2, 3]
for 변수 in 리스트:
  print("3 x " + str(변수))
012 문제를 풀었다면 충분히 응용할 수 있어야합니다. "3 x " 문자열과 숫자를 이어붙여 출력하면됩니다. 
다만 변수에 바인딩된 값이 숫자이기 때문에 문자로 변환 후에 문자열 연산을 사용할 수 있습니다.
'''
for i in 리스트:
   print("3 x", i)


print("------------------------------------- 147")
# 147
'''리스트에는 세 개의 숫자가 바인딩돼 있다.'''
리스트 = [1, 2, 3]
'''for문을 사용해서 다음과 같이 출력하라.
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
'''
for i in 리스트:
   print('3 x', i ,'=', 3*i)
'''1장에서 배운 문자열 함수를 활용하면 코드가 더욱 읽기 쉬워집니다.'''
for i in 리스트:
   print("3 x {} = {}".format(i, 3 * i))

print("------------------------------------- 148")
# 148
'''리스트에는 네 개의 문자열이 바인딩돼 있다.'''
리스트 = ["가", "나", "다", "라"]
'''for문을 사용해서 다음과 같이 출력하라.
나
다
라
'''
for i in 리스트[1:]:
   print(i)


print("------------------------------------- 149")
# 149
'''리스트에는 네 개의 문자열이 바인딩돼 있다.'''
리스트 = ["가", "나", "다", "라"]
'''for문을 사용해서 다음과 같이 출력하라 [시작:끝:증감폭].
가
다
'''
for i in 리스트[::2]:
   print(i)


print("------------------------------------- 150")
# 150
'''리스트에는 네 개의 문자열이 바인딩돼 있다.'''
'''for문을 사용해서 다음과 같이 출력하라.
라
다
나
가
증감폭을 음수로 설정하면 끝에서 앞방향으로 값을 슬라이싱합니다.
'''
for i in 리스트[: :-1]:
   print(i)